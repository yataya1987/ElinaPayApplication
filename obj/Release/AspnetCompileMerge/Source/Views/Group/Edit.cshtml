@model BnetApplication.Models.Group

@{
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    ViewBag.Title = "Edit";
}

<div class="container">
    <ol class="breadcrumb">
        <li><a href="~/dea/index">Dashboard</a></li>
        <li><a href="~/Group/GroupList">Groups List</a></li>
        <li class="active">Edit Group</li>
    </ol>
</div>
<h2>Edit Group</h2>
@if (ViewBag.mes != null)
{
    <div class="alert alert-success alert-danger">
        <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
        <strong>Erorr!</strong> @ViewBag.mes.
    </div>
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.groupSkill, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.groupSkill, ViewData["Skill"] as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.groupSkill, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.groupPrivilege, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.groupPrivilege, ViewData["PRIVILEGE"] as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.groupPrivilege, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.groupAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.groupAccount, ViewData["Account"] as IEnumerable<SelectListItem>,  new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.groupAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.groupStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.groupStatus, ViewBag.Status as IEnumerable<SelectListItem>, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.groupStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "GroupList")
</div>
