@model BnetApplication.Models.Ticket
@{
    Layout = null;
}
<div class="col-md-8">
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Id)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.CallType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Ani)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Ani)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SubscriberName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SubscriberName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ServiceNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ServiceNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AlternativeNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AlternativeNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CallAddress)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CallAddress)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ProblemType)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ProblemType)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketDetails)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketDetails)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Router)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Router)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Idate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Idate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Iuser)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Iuser)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Udate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Udate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Uuser)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Uuser)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AgentUdate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AgentUdate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AgentUpdate)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AgentUpdate)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AgentUNote)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AgentUNote)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StatusInternal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StatusInternal)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketInternalAction)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketInternalAction)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.StatusExternal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.StatusExternal)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketExternalAction)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketExternalAction)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UdateExternal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UdateExternal)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UuserExternal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UuserExternal)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FollowUp)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FollowUp)
        </dd>

    </dl>
</div>

@if (Model.StatusInternal == "جديد" || Model.StatusInternal == "قيد المتابعة")
{
    <div class="col-md-4">
        <div class="panel panel-default">
            <div class="panel-heading clearfix">
                <h4 class="">اضافة تفاصيل جديدة </h4>

            </div>

            <div class="panel-body">
                <form name="Agentinternalupdate" id="Agentinternalupdate">
                    <input type="hidden" id="Id" name="Id" value="@Model.Id">
                    <div class="input-group">
                        <span class="input-group-addon">الحالة</span>
                        @Html.DropDownList("StatusInternal", ViewData["Status"] as IEnumerable<SelectListItem>, "اختار الحالة", new { @class = "form-control", @id = "Status1" })
                    </div>

                    <br />

                    <div class="input-group">
                        <span class="input-group-addon">جهة المتابعة</span>
                        <textarea rows="4" type="text" class="form-control" id="FollowUp" name="FollowUp"></textarea>
                    </div>

                    <br />
                    <div class="input-group" id="action" style="display:none">
                        <span class="input-group-addon">اجراء المشرف 1</span>
                        <textarea rows="4" type="text" class="form-control" id="TicketInternalAction" name="TicketInternalAction"></textarea>
                    </div>

                    <br />

                    <div class="checkbox">
                        <label><input type="checkbox" name="IsRedirect" value="Y">تحويل المتابعة الى المشرف 2</label>
                    </div>

                    <br />
                    <button id="UpdateTicket" class="btn btn-success btn-block">حفظ</button>
                </form>

            </div>
        </div>
    </div>
}


<script>
    $(function () {
        $("form[name='Agentinternalupdate']").validate({
            // Specify validation rules
            rules: {
                // The key name on the left side is the name attribute
                // of an input field. Validation rules are defined
                // on the right side
                StatusInternal: "required",
                FollowUp: "required",
                TicketInternalAction: "required"


            },
            // Specify validation error messages
            messages: {
                StatusInternal: "الرجاء اختيار الحالة",
                FollowUp: "الرجاء ادخال جهة المتابعة",
                TicketInternalAction: "الرجاء ادخال الاجراء"


            },
            // Make sure the form is submitted to the destination defined
            // in the "action" attribute of the form when valid
            submitHandler: function (form) {
                $.alert({
                    title: 'اضافة تفاصيل',
                    content: 'هل انت متأكد من البيانات المدخلة وتريد حفظ التفاصيل الجديدة للمتابعة؟',
                    rtl: true,
                    closeIcon: true,
                    buttons: {
                        confirm: {
                            text: 'تأكيد',
                            btnClass: 'btn-blue',
                            action: function () {

                                $.alert({
                                    title: 'تنبه !',
                                    content: function () {
                                        var self = this;
                                        //self.setContent('Checking callback flow');
                                        var form = $("#Agentinternalupdate");

                                        return $.ajax({
                                            url: '@Url.Action("UpdateTicketInternal", "Ticket")',
                                            data: form.serialize(),
                                            type: 'POST',
                                            success: function (data) {
                                                //Show popup
                                                if (data.ms == "Success") {
                                                    self.setContentAppend('<div><h3>تمت التعديل بنجاح</h3></div>');
                                                    $('#myModal').modal('hide');
                                                }
                                                else {
                                                    self.setContentAppend('<div><h3>حدث خطأ اثناء التعديل</h3></div>' + data.ms);

                                                }


                                            },
                                            error: function (data) {
                                                //Show popup
                                                self.setContentAppend('<div>حدث خطأ اثناء التعديل</div>');

                                            }
                                        });
                                    }
                                });
                            }
                        },
                        cancel: {
                            text: 'الغاء',
                            action: function () {
                            }
                        }
                    }
                });

            }
        });
    });


    $('#Status1').on('change', function () {
        //alert($('#Status1').val());

        if ($('#Status1').val() == "3") {
            $('#action').show();
        }
        else {
            $('#action').hide();
        }

    })
</script>

